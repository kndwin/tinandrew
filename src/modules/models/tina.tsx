/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import type * as THREE from "three";
import React, { useRef, useEffect } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { type GLTF } from "three-stdlib";
import { _ } from "ts-pattern/dist/patterns";

type GLTFResult = GLTF & {
  nodes: {
    Body: THREE.SkinnedMesh;
    Cube: THREE.SkinnedMesh;
    Dress_bot: THREE.SkinnedMesh;
    Dress_bot001: THREE.SkinnedMesh;
    Dress_top: THREE.SkinnedMesh;
    Dress_top001: THREE.SkinnedMesh;
    Eye_outer: THREE.SkinnedMesh;
    Eye_pupil: THREE.SkinnedMesh;
    Eyebrows: THREE.SkinnedMesh;
    Hair: THREE.SkinnedMesh;
    Mouth: THREE.SkinnedMesh;
    Plane: THREE.SkinnedMesh;
    Plane001: THREE.SkinnedMesh;
    Plane002: THREE.SkinnedMesh;
    Teeth_lower: THREE.SkinnedMesh;
    Teeth_upper: THREE.SkinnedMesh;
    Tongue: THREE.SkinnedMesh;
    mixamorigHips: THREE.Bone;
  };
  materials: {};
};

type ActionName = "Armature|mixamo.com|Layer0";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export function TinaModel(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials, animations } = useGLTF("/tina.glb") as GLTFResult;
  const { actions } = useAnimations<GLTFActions>(animations, group);

  useEffect(() => {
    actions?.["Armature|mixamo.com|Layer0"]?.play();
  });

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh
            name="Body"
            geometry={nodes.Body.geometry}
            material={nodes.Body.material}
            skeleton={nodes.Body.skeleton}
          >
            <meshStandardMaterial color={"#ffd0a3"} />
          </skinnedMesh>
          <skinnedMesh
            name="Cube"
            geometry={nodes.Cube.geometry}
            material={nodes.Cube.material}
            skeleton={nodes.Cube.skeleton}
          />
          <skinnedMesh
            name="Dress_bot"
            geometry={nodes.Dress_bot.geometry}
            material={nodes.Dress_bot.material}
            skeleton={nodes.Dress_bot.skeleton}
          >
            <meshStandardMaterial color={"#ffffff"} />
          </skinnedMesh>

          <skinnedMesh
            name="Dress_bot001"
            geometry={nodes.Dress_bot001.geometry}
            material={nodes.Dress_bot001.material}
            skeleton={nodes.Dress_bot001.skeleton}
          >
            <meshStandardMaterial color={"#ffffff"} />
          </skinnedMesh>
          <skinnedMesh
            name="Dress_top"
            geometry={nodes.Dress_top.geometry}
            material={nodes.Dress_top.material}
            skeleton={nodes.Dress_top.skeleton}
          >
            <meshStandardMaterial color={"#ffffff"} />
          </skinnedMesh>
          <skinnedMesh
            name="Dress_top001"
            geometry={nodes.Dress_top001.geometry}
            material={nodes.Dress_top001.material}
            skeleton={nodes.Dress_top001.skeleton}
          >
            <meshStandardMaterial color={"#ffffff"} />
          </skinnedMesh>
          <skinnedMesh
            name="Eye_outer"
            geometry={nodes.Eye_outer.geometry}
            material={nodes.Eye_outer.material}
            skeleton={nodes.Eye_outer.skeleton}
          >
            <meshStandardMaterial color={"#ffffff"} />
          </skinnedMesh>
          <skinnedMesh
            name="Eye_pupil"
            geometry={nodes.Eye_pupil.geometry}
            material={nodes.Eye_pupil.material}
            skeleton={nodes.Eye_pupil.skeleton}
          >
            <meshStandardMaterial color={"#000000"} />
          </skinnedMesh>
          <skinnedMesh
            name="Eyebrows"
            geometry={nodes.Eyebrows.geometry}
            material={nodes.Eyebrows.material}
            skeleton={nodes.Eyebrows.skeleton}
          />
          <skinnedMesh
            name="Hair"
            geometry={nodes.Hair.geometry}
            material={nodes.Hair.material}
            skeleton={nodes.Hair.skeleton}
          >
            <meshStandardMaterial color={"#000000"} />
          </skinnedMesh>
          <skinnedMesh
            name="Mouth"
            geometry={nodes.Mouth.geometry}
            material={nodes.Mouth.material}
            skeleton={nodes.Mouth.skeleton}
          />
          <skinnedMesh
            name="Plane"
            geometry={nodes.Plane.geometry}
            material={nodes.Plane.material}
            skeleton={nodes.Plane.skeleton}
          />
          <skinnedMesh
            name="Plane001"
            geometry={nodes.Plane001.geometry}
            material={nodes.Plane001.material}
            skeleton={nodes.Plane001.skeleton}
          />
          <skinnedMesh
            name="Plane002"
            geometry={nodes.Plane002.geometry}
            material={nodes.Plane002.material}
            skeleton={nodes.Plane002.skeleton}
          />
          <skinnedMesh
            name="Teeth_lower"
            geometry={nodes.Teeth_lower.geometry}
            material={nodes.Teeth_lower.material}
            skeleton={nodes.Teeth_lower.skeleton}
          />
          <skinnedMesh
            name="Teeth_upper"
            geometry={nodes.Teeth_upper.geometry}
            material={nodes.Teeth_upper.material}
            skeleton={nodes.Teeth_upper.skeleton}
          />
          <skinnedMesh
            name="Tongue"
            geometry={nodes.Tongue.geometry}
            material={nodes.Tongue.material}
            skeleton={nodes.Tongue.skeleton}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/tina.glb");

const brownA = {
  brownA1: "#ab5805",
  brownA2: "#ab5805",
  brownA3: "#ab5602",
  brownA4: "#ad5a01",
  brownA5: "#af5500",
  brownA6: "#b05201",
  brownA7: "#ac5300",
  brownA8: "#aa4f00",
  brownA9: "#823d00",
  brownA10: "#723300",
  brownA11: "#582500",
  brownA12: "#220c00",
};
